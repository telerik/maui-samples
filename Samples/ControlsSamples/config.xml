<?xml version="1.0" encoding="utf-8"?>
<Configuration>
	<HeaderTitle>Telerik UI for .NET MAUI</HeaderTitle>
	<HeaderIcon>Logo.png</HeaderIcon>
	<SplashTitle>Developer Focused Examples</SplashTitle>
	<SplashIcon>Splash.png</SplashIcon>
	<SplashInfo>This application contains variety of scenarios demonstrating different capabilities and customizations of the Telerik UI for .NET MAUI component suite</SplashInfo>
	<DocumentationUrl>https://docs.telerik.com/devtools/maui/controls/introduction</DocumentationUrl>
	<FeedbackPortalUrl>https://feedback.telerik.com/maui/</FeedbackPortalUrl>
	<DownloadTrialUrl>https://www.telerik.com/maui-ui?utm_medium=product&amp;utm_source=appstoresamp&amp;utm_campaign=maui-awareness-maui-qsf-showcase</DownloadTrialUrl>
	<ExampleCodeUrl>https://github.com/telerik/maui-samples/tree/main/Samples/ControlsSamples/Examples</ExampleCodeUrl>

	<Controls>
		<Control>
			<Name>Accordion</Name>
			<DisplayName>Accordion</DisplayName>
			<Icon>accordion.png</Icon>
			<ShortDescription>Helps you save screen space and at the same time present data.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI Accordion is a vertically collapsible content panel that displays only one of its items at a time within the available space. It helps you save screen space and at the same time present the content to the end user in an easily accessible way.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>accordion.png</Icon>
					<Description>Telerik UI for .NET MAUI Accordion is a vertically collapsible content panel that displays only one of its items at a time within the available space. It helps you save screen space and at the same time present the content to the end user in an easily accessible way.</Description>
				</Example>
				<Example>
					<Name>Customization</Name>
					<Page>CustomizationView</Page>
					<DisplayName>Customization</DisplayName>
					<Icon>customization.png</Icon>
					<Description>Demonstrates how you can customize the visual appearance of the Accordion control by changing the ControlTemplate of the AccordionItemHeader and having various controls in the content of the AccordionItem.</Description>
				</Example>
			</Examples>
		</Control>
		
		<Control>
			<Name>AutoComplete</Name>
			<DisplayName>AutoComplete</DisplayName>
			<Icon>autocomplete.png</Icon>
			<ShortDescription>Provides suggestions while typing into a field.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI AutoComplete control provides suggestions while typing into a field, can complete user input and display multiple chosen tokens.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>autocomplete.png</Icon>
					<Description>Telerik UI for .NET MAUI AutoComplete control provides suggestions while typing into a field, can complete user input and display multiple chosen tokens.</Description>
				</Example>
				<Example>
					<Name>Customization</Name>
					<Page>CustomizationView</Page>
					<DisplayName>Customization</DisplayName>
					<Icon>customization.png</Icon>
					<Description>Demonstrates how you could customize the visual appearance of the AutoComplete control through various templates such as TokenTemplate, SuggestionItemTemplate, etc.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>BadgeView</Name>
			<DisplayName>BadgeView</DisplayName>
			<Icon>badgeview.png</Icon>
			<ShortDescription>Can be used for an additional marker for any element.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI BadgeView allows you to display badges in your application. To decorate avatars, navigation menus, or other components in the application when the visual notification is needed.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>badgeview.png</Icon>
					<Description>Telerik UI for .NET MAUI BadgeView allows you to display badges in your application. To decorate avatars, navigation menus, or other components in the application when the visual notification is needed.</Description>
				</Example>
				<Example>
					<Name>Configuration</Name>
					<Page>ConfigurationView</Page>
					<DisplayName>Configuration</DisplayName>
					<Icon>configuration.png</Icon>
					<Description>This example presents the various configuration options that the RadBadgeView provides. You can change the Badge BackgroundColor, Text and TextColor, Horizontal and Vertical Position and Alignment, Offset, Animation Duration and Animation Easing.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>Barcode</Name>
			<DisplayName>Barcode</DisplayName>
			<Icon>barcode.png</Icon>
			<ShortDescription>UI component used for creating and showing 1D and 2D barcodes.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI Barcode is a control used for creating and showing barcodes. You can generate and visualize barcodes in a machine-readable format via the RadBarcode control by providing numeric or character data.</FullDescription>
			<Examples>
				<Example>
					<Name>BoardingPass</Name>
					<Page>BoardingPassView</Page>
					<DisplayName>Boarding Pass</DisplayName>
					<Icon>barcode.png</Icon>
					<Description>Telerik UI for .NET MAUI Barcode is a control used for creating and showing barcodes. You can generate and visualize barcodes in a machine-readable format via the RadBarcode control by providing numeric or character data.</Description>
				</Example>
				<Example>
					<Name>DataMatrix</Name>
					<Page>DataMatrixView</Page>
					<DisplayName>Data Matrix</DisplayName>
					<Icon>barcode.png</Icon>
					<Description>Data Matrix barcode is a two-dimensional type of code used widely in industry for marking small parts and items due to its high data density and reliability.</Description>
				</Example>
				<Example>
					<Name>SpecialOffer</Name>
					<Page>SpecialOfferView</Page>
					<DisplayName>Special Offer</DisplayName>
					<Icon>barcode.png</Icon>
					<Description>In this example a Barcode for .NET MAUI is used to generate a linear (1D) barcode in order to identify a discount coupon. With RadBarcode you can choose between several types of 1D and 2D barcode symbologies and have also control over the visual appearance and sizing of your barcodes.</Description>
				</Example>
				<Example>
					<Name>Barcode1DGallery</Name>
					<Page>Barcode1DGalleryView</Page>
					<DisplayName>1D Barcode Gallery</DisplayName>
					<Icon>barcode.png</Icon>
					<Description>This example demonstrates the different linear (1D) barcodes the RadBarcode could generate including the most popular ones such as EAN13, EAN8, UPC-A, UPC-E and Code39.</Description>
				</Example>
				<Example>
					<Name>SwissQRCode</Name>
					<Page>SwissQRCodeView</Page>
					<DisplayName>Swiss QR Code</DisplayName>
					<Icon>barcode.png</Icon>
					<Description>With RadBarcode you could generate a SwissQRCode, which contains all the information needed for an automatic and efficient payment.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>Border</Name>
			<Icon>border.png</Icon>
			<DisplayName>Border</DisplayName>
			<ShortDescription>Provides full control over the look &amp; feel of the border that wraps around your views.</ShortDescription>
			<FullDescription>With Telerik UI for .NET MAUI Border you will have full control over the look &amp; feel of the border that wraps around your .NET MAUI views. You could surround any view such as Label, Image, and so on and specify different border thickness and corner radius on each side.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>border.png</Icon>
					<Description><![CDATA[With Telerik UI for .NET MAUI Border you will have full control over the look &amp; feel of the border that wraps around your .NET MAUI views. You could surround any view such as Label, Image, and so on and specify different border thickness and corner radius on each side.]]></Description>
				</Example>
				<Example>
					<Name>Configuration</Name>
					<Page>ConfigurationView</Page>
					<DisplayName>Configuration</DisplayName>
					<Icon>configuration.png</Icon>
					<Description>RadBorder provides a few useful properties for configuring its color, thickness and corner radius. This example lets you play with these properties and see the result right away.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>BusyIndicator</Name>
			<Icon>busyindicator.png</Icon>
			<DisplayName>BusyIndicator</DisplayName>
			<ShortDescription>Provides an easy way to display a busy or a loading indication.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI BusyIndicator enables you to display a notification whenever a longer-running process is being handled by the application. This makes the UI more informative and the user experience smoother. It also allows you to easily customize the appearance and even implement custom animations.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>busyindicator.png</Icon>
					<Description>Telerik UI for .NET MAUI BusyIndicator enables you to display a notification whenever a longer-running process is being handled by the application. This makes the UI more informative and the user experience smoother. It also allows you to easily customize the appearance and even implement custom animations.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>Button</Name>
			<DisplayName>Button</DisplayName>
			<Icon>button.png</Icon>
			<ShortDescription>Enhances the .NET MAUI Button by providing additional features related to UI customizations.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI Button enhances the .NET MAUI Button by providing additional features such as the ability to set a background image, change the border thickness, and the alignment of the button's content.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>button.png</Icon>
					<Description>Telerik UI for .NET MAUI Button enhances the .NET MAUI Button by providing additional features such as the ability to set a background image, change the border thickness, and the alignment of the button's content.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>Chart</Name>
			<DisplayName>Chart</DisplayName>
			<Icon>chartbar.png</Icon>
			<ShortDescription>A large collection of chart and graph types for data visualization.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI Chart is a feature-rich, intuitive and easy to use data visualization control which employs the Maui technology and allows you to build native apps in C# and XAML.</FullDescription>
			<FeedbackPortalUrl>https://feedback.telerik.com/maui?listMode=Recent&amp;categoryId=2334</FeedbackPortalUrl>
			<Examples>
				<Example>
					<Name>AreaSeries</Name>
					<Page>AreaSeriesView</Page>
					<DisplayName>Area Series</DisplayName>
					<Icon>chartarea.png</Icon>
					<Description>Area charts display different colors in the areas below the lines. This colorful and visual display distinguishes the data clearly. The Area charts support Stack, Stack100 and standard plotting modes.</Description>
				</Example>
				<Example>
					<Name>BarSeries</Name>
					<Page>BarSeriesView</Page>
					<DisplayName>Bar Series</DisplayName>
					<Icon>chartbar.png</Icon>
					<Description>Bar chart is one of the most common type of graphs used to display data. Sometimes known as 'column charts' depending on the orientation, bar charts are used to visualize data points as bar blocks where the width/height of each bar denotes the magnitude of its value.</Description>
				</Example>
				<Example>
					<Name>FinancialSeries</Name>
					<Page>FinancialSeriesView</Page>
					<DisplayName>Financial Series</DisplayName>
					<Icon>chartfinancial.png</Icon>
					<Description>The financial series are represented by the OhlcSeries and CandlestickSeries classes which differ in the way they visualize the data point. OHLC stands for Open, High, Low and Close.</Description>
				</Example>
				<Example>
					<Name>FinancialIndicators</Name>
					<Page>FinancialIndicatorsView</Page>
					<DisplayName>Financial Indicators</DisplayName>
					<Icon>chartfinancialindicator.png</Icon>
					<Description>The financial indicators are a collection of DataPoints (calculated with different algorithms using the series data) visualized using Line Shape.</Description>
					<Icon>chartfinancialindicator.png</Icon>
				</Example>
				<Example>
					<Name>LineSeries</Name>
					<Page>LineSeriesView</Page>
					<DisplayName>Line Series</DisplayName>
					<Icon>chartline.png</Icon>
					<Description>Line charts are often used to plot changes in data over time, such as monthly temperature changes or daily changes in stock market prices. If you are plotting changes in data over time, time is plotted along the horizontal axis and your other data is plotted as individual points along the vertical axis.</Description>
				</Example>
				<Example>
					<Name>NullValues</Name>
					<Page>NullValuesView</Page>
					<DisplayName>Null Values</DisplayName>
					<Icon>chartnullvalues.png</Icon>
					<Description>Line charts and area charts can visualize null values as gaps in the chart.</Description>
				</Example>
				<Example>
					<Name>ScatterSeries</Name>
					<Page>ScatterSeriesView</Page>
					<DisplayName>ScatterSeries</DisplayName>
					<Icon>chartscatter.png</Icon>
					<Description>A scatter chart is a two-dimensional graphical representation of a set of data where each x/y variable is represented on the graph as a dot. This type of chart can be used in to visually describe relationships between two numerical parameters or to represent distributions.</Description>
				</Example>
				<Example>
					<Name>PieDonutSeries</Name>
					<Page>PieDonutSeriesView</Page>
					<DisplayName>Pie &amp; Donut Series</DisplayName>
					<Icon>chartpie.png</Icon>
					<Description>The pie chart visualizes its data in the shape of a pie. Each data item is visually represented by a pie/donut slice. The ratio between the space consumed by each slice and the space consumed by the whole chart is the same as the ratio between the value of the data point that it represents and the total value of all data points in the series.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>CheckBox</Name>
			<DisplayName>CheckBox</DisplayName>
			<Icon>checkbox.png</Icon>
			<ShortDescription>Enables users to choose between two mutually exclusive options.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI CheckBox is a checkbox control that enables users to make a choice between two mutually exclusive options. In addition, RadCheckBox provides an indeterminate state which indicates the control is neither checked nor unchecked. RadCheckBox exposes various Color properties you could use to customize its visual appearance so that it matches the look &amp; feel of your app.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>checkbox.png</Icon>
					<Description><![CDATA[Telerik UI for .NET MAUI CheckBox is a checkbox control that enables users to make a choice between two mutually exclusive options. In addition, RadCheckBox provides an indeterminate state which indicates the control is neither checked nor unchecked. RadCheckBox exposes various Color properties you could use to customize its visual appearance so that it matches the look &amp; feel of your app.]]></Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>ComboBox</Name>
			<DisplayName>ComboBox</DisplayName>
			<Icon>combobox.png</Icon>
			<ShortDescription>Allows users to select item/items from a drop-down list of items.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI ComboBox allows users to select item/items from a drop-down list of items. The control has a number of features such as editing, searching, single and multiple selection, flexible styling API, dropdown customizations, and more.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>combobox.png</Icon>
					<Description>Telerik UI for .NET MAUI ComboBox allows users to select item/items from a drop-down list of items. The control has a number of features such as editing, searching, single and multiple selection, flexible styling API, dropdown customizations, and more.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>DataForm</Name>
			<DisplayName>DataForm</DisplayName>
			<Icon>dataform.png</Icon>
			<ShortDescription>A fully customizable form control for collecting business object data.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI DataForm is a customizable component allowing you to easily create a form for collecting or editing business object data.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>dataform.png</Icon>
					<Description>Telerik UI for .NET MAUI DataForm is a customizable component allowing you to easily create a form for collecting or editing business object data.</Description>
				</Example>
				<Example>
					<Name>Customization</Name>
					<Page>CustomizationView</Page>
					<DisplayName>Customization</DisplayName>
					<Icon>customization.png</Icon>
					<Description>Demonstrates the customization options DataForm provides. Easily style the editors, headers in a way you want using the flexible styling API.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>DataGrid</Name>
			<DisplayName>DataGrid</DisplayName>
			<Icon>datagrid.png</Icon>
			<ShortDescription>A powerful and feature-rich control used to visualize and edit data represented in a tabular fashion.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI DataGrid control provides the ability to easily perform operations like sorting, filtering, grouping and editing over the underlying data.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>datagrid.png</Icon>
					<Description>Telerik UI for .NET MAUI DataGrid control provides the ability to easily perform operations like sorting, filtering, grouping and editing over the underlying data.</Description>
				</Example>
				<Example>
					<Name>FrozenColumns</Name>
					<Page>FrozenColumnsView</Page>
					<DisplayName>Frozen Columns</DisplayName>
					<IsConfigurable>true</IsConfigurable>
					<Icon>datagrid.png</Icon>
					<Description>Telerik UI for .NET MAUI DataGrid provides an easy way to select one or more columns and exclude them from the horizontal scrolling. The frozen columns stay static on top of the horizontal scrolling. In order to freeze/unfreeze the columns use the configuration UI of the page.</Description>
				</Example>
				<Example>
					<Name>AggregateSupport</Name>
					<Page>AggregateSupportView</Page>
					<DisplayName>Aggregate Support</DisplayName>
					<Icon>datagrid.png</Icon>
					<Description>Demonstrates how you can easily use the built-in aggregate functionality of the DataGrid in order to sum data, count data, etc.</Description>
				</Example>
				<Example>
					<ExcludeFrom>Android,iOS,MacCatalyst,WinUI</ExcludeFrom>
					<Name>BillionCells</Name>
					<Page>BillionCellsView</Page>
					<DisplayName>One Billion Cells</DisplayName>
					<Icon>datagrid.png</Icon>
					<Description>Demonstrates how you can easily store big clusters of data in the DataGrid</Description>
				</Example>
				<Example>
					<Name>ColumnTypes</Name>
					<Page>ColumnTypesView</Page>
					<DisplayName>Column Types</DisplayName>
					<Icon>datagrid.png</Icon>
					<Description>Demonstrates the different type of columns that DataGrid control provides. Column types such as Text, Boolean, Template, Date, Time, Numeric.</Description>
				</Example>
				<Example>
					<Name>Selection</Name>
					<Page>SelectionView</Page>
					<DisplayName>Selection</DisplayName>
					<Icon>datagrid.png</Icon>
					<IsConfigurable>true</IsConfigurable>
					<Description>Demonstrates the DataGrid Selection feature. You can easily disable the selection, apply single or multiple selection. When selection is on, it can be applied to DataGrid Cell or Row.</Description>
				</Example>
				<Example>
					<Name>Grouping</Name>
					<Page>GroupingView</Page>
					<DisplayName>Grouping</DisplayName>
					<Icon>datagrid.png</Icon>
					<IsConfigurable>true</IsConfigurable>
					<Description>Demonstrates the Grouping feature of the DataGrid. You can drag the column headers onto a grouping panel, easily enable/disable the grouping, and programmatically group the DataGrid.</Description>
				</Example>
				<Example>
					<Name>Customization</Name>
					<Page>CustomizationView</Page>
					<DisplayName>Customization</DisplayName>
					<Icon>customization.png</Icon>
					<Description>Demonstrates how you could customize the visual appearance of the DataGrid control through various Style and StyleSelector properties such as CellContentStyle, CellDecorationStyle, SelectionStyle, GroupHeaderStyleSelector, etc.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>DatePicker</Name>
			<DisplayName>DatePicker</DisplayName>
			<Icon>datepicker.png</Icon>
			<ShortDescription>Enables users to easily and intuitively select a date via a customizable spinner dialog.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI DatePicker allows the users to select a date. Its items are visualized inside a popup. Date Picker control has a number of features which allows you to set a date range, date format, and fully customize the dialog appearance such as its header and footer.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>datepicker.png</Icon>
					<Description>Telerik UI for .NET MAUI DatePicker allows the users to select a date. Its items are visualized inside a popup. Date Picker control has a number of features which allows you to set a date range, date format, and fully customize the dialog appearance such as its header and footer.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>DateTimePicker</Name>
			<DisplayName>DateTimePicker</DisplayName>
			<Icon>datetimepicker.png</Icon>
			<ShortDescription>Provides an easy way to pick a date, time or date and time via a customizable spinner dialog.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI DateTimePicker enables users to easily pick a date, time, or both from a pre-defined set of values. The DateTimePicker control has several features which allow you to set a date range, date, and time format and fully customize the dialog appearance.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>datetimepicker.png</Icon>
					<Description>Telerik UI for .NET MAUI DateTimePicker enables users to easily pick a date, time, or both from a pre-defined set of values. The DateTimePicker control has several features which allow you to set a date range, date, and time format and fully customize the dialog appearance.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>DockLayout</Name>
			<DisplayName>DockLayout</DisplayName>
			<Icon>docklayout.png</Icon>
			<ShortDescription>Enables users to dock child elements of the application at a certain position on the screen.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI DockLayout is a layout that provides a mechanism for child elements to be docked to the left, right, top or bottom edge of the layout. You could easily define the docking side of each element through a RadDockLayout.Dock attached property. In addition, you can determine whether the last child element inside the layout will occupy the remaining available space.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>docklayout.png</Icon>
					<Description>Telerik UI for .NET MAUI DockLayout is a layout that provides a mechanism for child elements to be docked to the left, right, top or bottom edge of the layout. You could easily define the docking side of each element through a RadDockLayout.Dock attached property. In addition, you can determine whether the last child element inside the layout will occupy the remaining available space.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>Entry</Name>
			<DisplayName>Entry</DisplayName>
			<Icon>entry.png</Icon>
			<ShortDescription>Enhances the Maui Entry by providing means for customizing its look and adding an input validation feature.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI Entry is a text input control, which accepts text input from the user and provides consistent look and feel with the rest of the Telerik UI for .NET MAUI. It also has a validation API and corresponding error UI.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>entry.png</Icon>
					<Description>Telerik UI for .NET MAUI Entry is a text input control, which accepts text input from the user and provides consistent look and feel with the rest of the Telerik UI for .NET MAUI. It also has a validation API and corresponding error UI.</Description>
				</Example>
				<Example>
					<ExcludeFrom>Android,iOS,MacCatalyst,WinUI</ExcludeFrom>
					<Name>Configuration</Name>
					<Page>ConfigurationView</Page>
					<DisplayName>Configuration</DisplayName>
					<Icon>configuration.png</Icon>
					<Description>This example presents various configuration options that the RadEntry control provides.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>Expander</Name>
			<DisplayName>Expander</DisplayName>
			<Icon>expander.png</Icon>
			<ShortDescription>Hosts any piece of UI in a container, which can be easily expanded/collapsed, saving screen space.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI Expander helps you save screen space by presenting content in an expandable container that can be easily expanded/collapsed by tapping on the header of the control.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>expander.png</Icon>
					<Description>Telerik UI for .NET MAUI Expander helps you save screen space by presenting content in an expandable container that can be easily expanded/collapsed by tapping on the header of the control.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>Gauge</Name>
			<DisplayName>Gauge</DisplayName>
			<Icon>gauge.png</Icon>
			<ShortDescription>A set of highly customizable, animated and user-friendly linear and radial gauges.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI Gauge is an essential data visualization component that uses indicators to display numeric values and uses ranges to give context to the indicated values.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>gauge.png</Icon>
					<Description>Telerik UI for .NET MAUI Gauge is an essential data visualization component that uses indicators to display numeric values and uses ranges to give context to the indicated values.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>ImageEditor</Name>
			<DisplayName>ImageEditor</DisplayName>
			<Icon>imageeditor.png</Icon>
			<ShortDescription>ImageEditor control is a powerful tool that allows you to easily visualize, edit and save images in your desktop or mobile application.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI ImageEditor control is a powerful tool that allows you to easily visualize, edit and save images in your desktop or mobile application. It supports different file formats and comes with standard editing options such as zoom and pan, undo and redo, load and save an image, flip and rotate, resize and crop. Additionally, the control is packed with a variety of tools, filters, and other advanced functions.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>imageeditor.png</Icon>
					<Description>ImageEditor control is a powerful tool that allows you to easily visualize, edit and save images in your desktop or mobile application. It supports different file formats and comes with standard editing options such as zoom and pan, undo and redo, load and save an image, flip and rotate, resize and crop. Additionally, the control is packed with a variety of tools, filters, and other advanced functions.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>ItemsControl</Name>
			<DisplayName>ItemsControl</DisplayName>
			<Icon>itemscontrol.png</Icon>
			<ShortDescription>Enables users to visualize a list of items and customize the way each item looks using the provided template.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI ItemsControl enables you to visualize a list of items and provides full control over the way each item is rendered through the supported item template.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>FirstLook</DisplayName>
					<Icon>itemscontrol.png</Icon>
					<Description>Telerik UI for .NET MAUI ItemsControl enables you to visualize a list of items and provides full control over the way each item is rendered through the supported item template.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>ListPicker</Name>
			<DisplayName>ListPicker</DisplayName>
			<Icon>listpicker.png</Icon>
			<ShortDescription>Allows users to select an item from a list, visualized inside a customizable spinner dialog.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI ListPicker provides an elegant UI experience for end users who need to pick an item from a pre-defined list. The ListPicker component loops its listed items infinitely while scrolling and is flexible to various customizations to ensure consistent user experience across cross-platform applications. Developers can easily customize the dialog appearance, style the listed and selected items and define a placeholder text when an item is not selected.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>listpicker.png</Icon>
					<Description>Telerik UI for .NET MAUI ListPicker provides an elegant UI experience for end users who need to pick an item from a pre-defined list. The ListPicker component loops its listed items infinitely while scrolling and is flexible to various customizations to ensure consistent user experience across cross-platform applications. Developers can easily customize the dialog appearance, style the listed and selected items and define a placeholder text when an item is not selected.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>ListView</Name>
			<DisplayName>ListView</DisplayName>
			<Icon>listview.png</Icon>
			<ShortDescription>A virtualized list control that provides the most commonly needed features when displaying a list of items.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI ListView is a virtualized high-performance list component that provides the most popular features associated with scenarios where a list of items is used. All these features are embedded in one control with the idea to save developer time and provide a better experience. The control's features include different layouts, pull-to-refresh, grouping, swipe gestures, changing the items' order by drag and drop operation, and more.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>listview.png</Icon>
					<Description>Telerik UI for .NET MAUI ListView is a virtualized high-performance list component that provides the most popular features associated with scenarios where a list of items is used. All these features are embedded in one control with the idea to save developer time and provide a better experience. The control's features include different layouts, pull-to-refresh, grouping, swipe gestures, changing the items' order by drag and drop operation, and more.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>Map</Name>
			<DisplayName>Map</DisplayName>
			<Icon>map.png</Icon>
			<ShortDescription>Visualizes stunning map overlays through ESRI Shapefiles straight into your application.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI Map lets you display stunning map overlays using ESRI Shapefiles. The control provides support for labels, multiple, single selection and powerful customization APIs.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<Icon>map.png</Icon>
					<Description>Telerik UI for .NET MAUI Map lets you display stunning map overlays using ESRI Shapefiles. The control provides support for labels, multiple, single selection and powerful customization APIs.</Description>
					<DisplayName>First Look</DisplayName>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>MaskedEntry</Name>
			<DisplayName>MaskedEntry</DisplayName>
			<Icon>maskedentry.png</Icon>
			<ShortDescription>Provides an easy way to restrict user input to most commonly used masked input types.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI MaskedEntry formats and restricts text inputs to predefined or defined patterns, and provides input validation and masks, such as text, Regex, IP, email, and numeric.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>maskedentry.png</Icon>
					<Description>Telerik UI for .NET MAUI MaskedEntry formats and restricts text inputs to predefined or defined patterns, and provides input validation and masks, such as text, Regex, IP, email, and numeric.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>NumericInput</Name>
			<DisplayName>NumericInput</DisplayName>
			<Icon>numericinput.png</Icon>
			<ShortDescription>Highly customizable input control for entering numeric data.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI NumericInput is a highly customizable input control for numeric data. It allows the user to set/edit a number using the decrease and increase buttons or directly enter it in the input field. RadNumericInput also provides consistent look with the rest of the controls from the Telerik UI for .NET MAUI suite.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>numericinput.png</Icon>
					<Description>Telerik UI for .NET MAUI NumericInput is a highly customizable input control for numeric data. It allows the user to set/edit a number using the decrease and increase buttons or directly enter it in the input field. RadNumericInput also provides consistent look with the rest of the controls from the Telerik UI for .NET MAUI suite.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>Path</Name>
			<Icon>path.png</Icon>
			<DisplayName>Path</DisplayName>
			<ShortDescription>Draws complex shapes composed of different geometries as arcs, ellipses, lines and rectangles.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI Path is a control that can be used to draw complex shapes that can be composed of different geometries like arcs, ellipses, lines, and rectangles.</FullDescription>
			<Examples>
				<Example>
					<Name>Figures</Name>
					<Page>FiguresView</Page>
					<DisplayName>Figures</DisplayName>
					<Icon>path.png</Icon>
					<Description>Telerik UI for .NET MAUI Path is a control that can be used to draw complex shapes that can be composed of different geometries like arcs, ellipses, lines, and rectangles.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>PdfProcessing</Name>
			<DisplayName>PdfProcessing</DisplayName>
			<Icon>pdfprocessing.png</Icon>
			<ShortDescription>Processing library that allows creation, import and export of PDF documents.</ShortDescription>
			<FullDescription>Telerik PdfProcessing is a processing library that allows you to create, import and export PDF documents from your code. The API of RadPdfProcessing contains two different editors, enabling you to choose between editing in a flow-like manner, or using the much more powerful and flexible fixed document structure and drawing on the page.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>Generate Pdf document</DisplayName>
					<Icon>pdfprocessing.png</Icon>
					<Description>Telerik PdfProcessing is a processing library that allows you to create, import and export PDF documents from your code. The API of RadPdfProcessing contains two different editors, enabling you to choose between editing in a flow-like manner, or using the much more powerful and flexible fixed document structure and drawing on the page. This example demonstrates how to create a document containing images, text and shapes and export it to PDF.</Description>
				</Example>
				<Example>
					<Name>NotEmbeddingFonts</Name>
					<Page>NotEmbeddingFontsView</Page>
					<DisplayName>Not Embedding Fonts</DisplayName>
					<Icon>pdfprocessing.png</Icon>
					<Description>Telerik PdfProcessing provides easy to use API which allows choosing whether the font files to be embedded when exporting PDF documents. This example shows the initial size of an imported document and the reduced one after removing the fonts and saving it. Disclaimer: Removing the fonts from the document makes it dependent on the operational system to provide the needed fonts. If they are not installed, the document won't be successfully opened.</Description>
				</Example>
				<Example>
					<Name>PermissionsAndEncryption</Name>
					<Page>PermissionsAndEncryptionView</Page>
					<DisplayName>Permissions and Encryption</DisplayName>
					<Icon>pdfprocessing.png</Icon>
					<Description>Telerik PdfProcessing provides easy to use API which allows setting different permissions and encryption when exporting encrypted PDF documents. This example demonstrates the different settings available that could be applied to the exported document. The password will be required when trying to change the already set document permissions. The currently supported encryption algorithms when exporting encrypted documents are RC4 and AES-256.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>Popup</Name>
			<DisplayName>Popup</DisplayName>
			<Icon>popup.png</Icon>
			<ShortDescription>Displays an alert dialog or a popup in the mobile app in a position of your choice.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI Popup lets you display content of your choice on top of existing view. You could define whether the Popup will be modal or not as well as control its position through various placement settings.</FullDescription>
			<Examples>
				<Example>
					<Name>ContextMenu</Name>
					<Page>ContextMenuView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>popup.png</Icon>
					<Description>Telerik UI for .NET MAUI Popup lets you display content of your choice on top of existing view. You could define whether the Popup will be modal or not as well as control its position through various placement settings.</Description>
				</Example>
			</Examples>
		</Control>
		
		<Control>
			<Name>ProgressBar</Name>
			<DisplayName>ProgressBar</DisplayName>
			<Icon>progressbar.png</Icon>
			<ShortDescription>Displays progress information to the users during a long-running operation.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI ProgressBar displays progress information to the users during a long-running operation. With the ProgressBar you can track the progress of various tasks.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>popup.png</Icon>
					<Description>Telerik UI for .NET MAUI ProgressBar control is primarily used to indicate the progress of a long-running operation on a desktop or mobile device. It can show multiple forms of progress, such as data loading or a multi-step user action, in which you can visualize how much has been completed and what remains.</Description>
				</Example>
				<Example>
					<Name>Configuration</Name>
					<Page>ConfigurationView</Page>
					<DisplayName>Configuration</DisplayName>
					<Icon>configuration.png</Icon>
					<Description>This example presents various configuration options that the ProgressBar control provides.</Description>
				</Example>
			</Examples>
		</Control>
		
		<Control>
			<Name>Rating</Name>
			<DisplayName>Rating</DisplayName>
			<Icon>rating.png</Icon>
			<ShortDescription>Allows users to intuitively rate by selecting number of items/stars from a predefined number.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI Rating is a flexible UI component that allows users to intuitively rate by making a selection.</FullDescription>
			<Examples>
				<Example>
					<Name>RestaurantReview</Name>
					<Page>RestaurantReviewView</Page>
					<DisplayName>Restaurant Review</DisplayName>
					<Icon>rating.png</Icon>
					<Description>Telerik UI for .NET MAUI Rating is a flexible UI component that allows users to intuitively rate by making a selection.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>SegmentedControl</Name>
			<DisplayName>SegmentedControl</DisplayName>
			<Icon>segmentedcontrol.png</Icon>
			<ShortDescription>Displays horizontally aligned, mutually exclusive options, which can be selected by the user.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI SegmentedControl enables you to display several options in a convenient picker and select value with a single tap.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>segmentedcontrol.png</Icon>
					<Description>Telerik UI for .NET MAUI SegmentedControl enables you to display several options in a convenient picker and select value with a single tap. This example showcases the usage of the SegmentedControl in a MVVM environment. Images can easily be displayed in the SegmentedControl, and styles can be used to achieve the same look for the SegmentedControl's in your application.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>SideDrawer</Name>
			<DisplayName>SideDrawer</DisplayName>
			<Icon>sidedrawer.png</Icon>
			<ShortDescription>Designed to enable users to visualize a hidden view in their applications.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI SideDrawer allows you to visualize a hidden view inside your application. The control has two views, MainContent and DrawerContent. The hiddenview (DrawerContent) can be visualized using a flick gesture and can be shown from all four sides of the screen.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>sidedrawer.png</Icon>
					<Description>Telerik UI for .NET MAUI SideDrawer allows you to visualize a hidden view inside your application. The control has two views, MainContent and DrawerContent. The hiddenview (DrawerContent) can be visualized using a flick gesture and can be shown from all four sides of the screen.</Description>
				</Example>
			</Examples>
		</Control>

    <Control>
      <Name>SignaturePad</Name>
      <DisplayName>SignaturePad</DisplayName>
      <Icon>signaturepad.png</Icon>
      <ShortDescription>SignaturePad for .NET MAUI is designed to enable users to draw and save signatures.</ShortDescription>
      <FullDescription>Telerik UI for .NET MAUI SignaturePad for .NET MAUI is designed to enable users to draw and save signatures.</FullDescription>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Page>FirstLookView</Page>
          <DisplayName>First Look</DisplayName>
          <Icon>signaturepad.png</Icon>
          <Description>This example shows the ability to draw a signature in RadSignaturePad, save this signature as image and then visualize it.</Description>
        </Example>
      </Examples>
    </Control>

    <Control>
			<Name>SpreadProcessing</Name>
			<DisplayName>SpreadProcessing</DisplayName>
			<Icon>spreadstreamprocessing.png</Icon>
			<ShortDescription>Easily import, modify and export files to and from the most common spreadsheet file formats.</ShortDescription>
			<FullDescription>Telerik SpreadProcessing is a powerful library that enables you to create applications with native support for spreadsheet documents. With RadSpreadProcessing, you can create spreadsheets from scratch, modify existing documents or convert between the most common spreadsheet formats.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>spreadstreamprocessing.png</Icon>
					<Description>Telerik SpreadProcessing is a powerful library that enables you to create applications with native support for spreadsheet documents. With RadSpreadProcessing, you can create spreadsheets from scratch, modify existing documents or convert between the most common spreadsheet formats.</Description>
				</Example>
				<Example>
					<Name>Convert</Name>
					<Page>ConvertView</Page>
					<DisplayName>Convert</DisplayName>
					<Icon>spreadstreamprocessing.png</Icon>
					<Description>An example that demonstrates how to import documents and convert to different formats.</Description>
				</Example>
				<Example>
					<Name>FindAndReplace</Name>
					<Page>FindAndReplaceView</Page>
					<DisplayName>Find &amp; Replace</DisplayName>
					<Icon>spreadstreamprocessing.png</Icon>
					<Description>A demonstration of the built-in Find and Replace functionality in the SpreadProcessing library.</Description>
				</Example>
				<Example>
					<Name>ConditionalFormatting</Name>
					<Page>ConditionalFormattingView</Page>
					<DisplayName>Conditional Formatting</DisplayName>
					<Icon>spreadstreamprocessing.png</Icon>
					<Description>Telerik SpreadProcessing supports conditional visual formatting based on the underlying data of the worksheet. It allows you to create new rules, or modify existing ones. The current example demostrates how to add conditional formatting elements programatically, while showcasing some of the rule options.</Description>
				</Example>
				<Example>
					<Name>AddNotes</Name>
					<Page>AddNotesView</Page>
					<DisplayName>Add Notes</DisplayName>
					<Icon>spreadstreamprocessing.png</Icon>
					<Description>Telerik SpreadProcessing allows you to insert a Note related to a cell on a specific document position. The example demonstrates how you can add notes with custom Author and Text while generating a document, and then view the document.</Description>
				</Example>
				<Example>
					<Name>AddComments</Name>
					<Page>AddCommentsView</Page>
					<DisplayName>Add Comments</DisplayName>
					<Icon>spreadstreamprocessing.png</Icon>
					<Description>Telerik SpreadProcessing allows you to insert a Comment related to a cell. The example demonstrates how you can add comments with custom Author and Text while generating a document, and then view the document.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>SpreadStreamProcessing</Name>
			<DisplayName>SpreadStreamProcessing</DisplayName>
			<Icon>spreadstreamprocessing.png</Icon>
			<ShortDescription>Create big spreadsheet documents with great performance and minimal memory footprint.</ShortDescription>
			<FullDescription>Telerik SpreadStreamProcessing is a document processing library which allows you to create big spreadsheet documents with great performance and minimal memory footprint.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>Generate Spreadsheet</DisplayName>
					<Icon>spreadstreamprocessing.png</Icon>
					<Description>Telerik SpreadStreamProcessing is a document processing library which allows you to create big spreadsheet documents with great performance and minimal memory footprint.</Description>
				</Example>
				<Example>
					<Name>ImportSpreadsheet</Name>
					<Page>ImportSpreadsheetView</Page>
					<DisplayName>Import Spreadsheet</DisplayName>
					<Icon>spreadstreamprocessing.png</Icon>
					<Description>The example demonstrates how to import spreadsheet documents.</Description>
					<ExcludeFrom>MacCatalyst</ExcludeFrom>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>TabView</Name>
			<DisplayName>TabView</DisplayName>
			<Icon>tabview.png</Icon>
			<ShortDescription>A flexible navigation control with tabbed interface.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI TabView is a flexible navigation control that allows you to build tabbed interfaces. Each TabView item has an associated content displayed on selection. The control is fully customizable.</FullDescription>
			<Examples>
				<Example>
					<Name>WorldClock</Name>
					<Page>WorldClockView</Page>
					<DisplayName>World Clock</DisplayName>
					<Icon>tabview.png</Icon>
					<Description>Telerik UI for .NET MAUI TabView is a flexible navigation control that allows you to build tabbed interfaces. Each TabView item has an associated content displayed on selection. The control is fully customizable.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>TemplatedPicker</Name>
			<DisplayName>TemplatedPicker</DisplayName>
			<ShortDescription>Fully customizable picker control that covers a wide range of item selection scenarios.</ShortDescription>
			<Icon>templatedpicker.png</Icon>
			<FullDescription>Telerik UI for .NET MAUI TemplatedPicker is a control designed to support the need for a tailored item selection based on various potential end-user scenarios (e.g. pick a country and city for a travel app). The Templated Picker enables you to define your custom template for an item selection and customize it to ensure user experience consistency across your application.</FullDescription>
			<Examples>
				<Example>
					<Description>Telerik UI for .NET MAUI TemplatedPicker is a control designed to support the need for a tailored item selection based on various potential end-user scenarios (e.g. pick a country and city for a travel app). The Templated Picker enables you to define your custom template for an item selection and customize it to ensure user experience consistency across your application.</Description>
					<Icon>templatedpicker.png</Icon>
					<Page>FirstLookView</Page>
					<Name>FirstLook</Name>
					<DisplayName>First Look</DisplayName>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>TimePicker</Name>
			<DisplayName>TimePicker</DisplayName>
			<Icon>timepicker.png</Icon>
			<ShortDescription>Provides a convenient way for the app users to select a time via a customizable spinner dialog.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI TimePicker provides a convenient way for the app users to select a time. Its items are visualized inside a popup. The control has a number of features which allows you to set a time range, time format and fully customize the dialog appearance such as its header and footer.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>timepicker.png</Icon>
					<Description>Telerik UI for .NET MAUI TimePicker provides a convenient way for the app users to select a time. Its items are visualized inside a popup. The control has a number of features which allows you to set a time range, time format and fully customize the dialog appearance such as its header and footer.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>TimeSpanPicker</Name>
			<DisplayName>TimeSpanPicker</DisplayName>
			<Icon>timespanpicker.png</Icon>
			<ShortDescription>Provides an easy way to select a time duration via a customizable spinner dialog.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI TimeSpanPicker provides an easy way to select a time duration. The component represents a time interval and allows you to set a time range between two times measured in numbers of days, hours, minutes and seconds.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>timespanpicker.png</Icon>
					<Description>Telerik UI for .NET MAUI TimeSpanPicker provides an easy way to select a time duration. The component represents a time interval and allows you to set a time range between two times measured in numbers of days, hours, minutes and seconds.</Description>
				</Example>
			</Examples>
		</Control>
    
    <Control>
      <Name>Toolbar</Name>
      <DisplayName>Toolbar</DisplayName>
      <Icon>toolbar.png</Icon>
      <ShortDescription>RadToolbar is a flexible control for implementation of tool and button strips, needed in most desktop and mobile applications.</ShortDescription>
      <FullDescription>Telerik UI for .NET MAUI Toolbar is a flexible control for implementation of tool and button strips, needed in most desktop and mobile applications. Its rich collection of ToolbarItems allows easy customization of every tool or button of the control independently according to the specific needs of the application.</FullDescription>
      <Examples>
        <Example>
          <Name>FirstLook</Name>
          <Page>FirstLookView</Page>
          <DisplayName>First Look</DisplayName>
          <Icon>toolbar.png</Icon>
          <Description>Telerik UI for .NET MAUI Toolbar is a flexible control for implementation of tool and button strips, needed in most desktop and mobile applications. Its rich collection of ToolbarItems allows easy customization of every tool or button of the control independently according to the specific needs of the application.</Description>
        </Example>
      </Examples>
    </Control>
    
		<Control>
			<Name>WordsProcessing</Name>
			<DisplayName>WordsProcessing</DisplayName>
			<Icon>wordsprocessing.png</Icon>
			<ShortDescription>Processing library that allows creation, import and export of DOCX documents.</ShortDescription>
			<FullDescription>Telerik WordsProcessing is a processing library that allows code-only generation of documents. Through the API you can create a document from scratch and export it to one of the supported formats – Docx, Rtf, Html, PDF and Txt.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>wordsprocessing.png</Icon>
					<Description>Telerik WordsProcessing is a processing library that allows code-only generation of documents. Through the API you can create a document from scratch and export it to one of the supported formats – Docx, Rtf, Html, PDF and Txt.</Description>
				</Example>
				<Example>
					<Name>Export</Name>
					<Page>ExportView</Page>
					<DisplayName>Export</DisplayName>
					<Icon>wordsprocessing.png</Icon>
					<Description>This example demonstrates export of flow documents to PDF, RTF, HTML and TXT using RadWordsProcessing. You can use the imported Word(docx) sample and convert it to PDF, RTF, HTML, TXT.</Description>
				</Example>
				<Example>
					<Name>FindAndReplace</Name>
					<Page>FindAndReplaceView</Page>
					<DisplayName>Find &amp; Replace</DisplayName>
					<Icon>wordsprocessing.png</Icon>
					<Description>This example illustrates the Replace functionality in RadWordsProcessing. You can replace or highlight text in the sample document, using regular expressions or strings and then export the document to view the result.</Description>
				</Example>
				<Example>
					<Name>NumberingFields</Name>
					<Page>NumberingFieldsView</Page>
					<DisplayName>Numbering Fields</DisplayName>
					<Icon>wordsprocessing.png</Icon>
					<Description>This example illustrates the Page Numbering functionality in RadWordsProcessing.</Description>
				</Example>
				<Example>
					<Name>TableOfContents</Name>
					<Page>TableOfContentsView</Page>
					<DisplayName>Table Of Contents</DisplayName>
					<Icon>wordsprocessing.png</Icon>
					<Description>With RadWordsProcessing you can insert a Table of Contents (TOC) and/or a Table of Authorities (TOA) fields in your Docx, Rtf or PDF document. The TOC can collect entries from heading styles, other specified styles, outline levels, captions, or entries specified by TC (Table of Contents Entry) fields. The TOA collects entries marked by TA (Table of Authorities Entry) fields.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>WrapLayout</Name>
			<DisplayName>WrapLayout</DisplayName>
			<Icon>wraplayout.png</Icon>
			<ShortDescription>Provides a mechanism for arranging child elements in rows or columns.</ShortDescription>
			<FullDescription>Telerik UI for .NET MAUI WrapLayout provides a mechanism for arranging child elements in rows or columns depending on the Orientation property. When the available space is filled, the control wraps these elements on а new row or column.</FullDescription>
			<Examples>
				<Example>
					<Name>FirstLook</Name>
					<Page>FirstLookView</Page>
					<DisplayName>First Look</DisplayName>
					<Icon>wraplayout.png</Icon>
					<Description>Telerik UI for .NET MAUI WrapLayout provides a mechanism for arranging child elements in rows or columns depending on the Orientation property. When the available space is filled, the control wraps these elements on а new row or column.</Description>
				</Example>
			</Examples>
		</Control>

		<Control>
			<Name>ZipLibrary</Name>
			<DisplayName>ZipLibrary</DisplayName>
			<Icon>ziplibrary.png</Icon>
			<ShortDescription>Compress data like images, docx or pdf files and send them over the wire faster.</ShortDescription>
			<FullDescription>Telerik ZipLibrary provides easy-to-use API to both create and load zip files as well as browse the contents of a zip file previously created. The API supports password protection and different compression levels. You can also create ZIP files in memory or add data to ZIP file from stream.</FullDescription>
			<Examples>
				<Example>
					<Name>CreateArchive</Name>
					<Page>CreateArchiveView</Page>
					<DisplayName>Create Archive</DisplayName>
					<Icon>ziplibrary.png</Icon>
					<Description>Telerik ZipLibrary provides easy-to-use API to both create and load zip files as well as browse the contents of a zip file previously created. The API supports password protection and different compression levels. You can also create ZIP files in memory or add data to ZIP file from stream.</Description>
				</Example>
			</Examples>
		</Control>
	</Controls>

	<HighlightedControls>
		<HighlightedControl>
			<DisplayName>DataGrid</DisplayName>
			<Icon>datagrid_white.png</Icon>
		</HighlightedControl>
		<HighlightedControl>
			<DisplayName>ImageEditor</DisplayName>
			<Icon>imageeditor_white.png</Icon>
		</HighlightedControl>
		<HighlightedControl>
			<DisplayName>Toolbar</DisplayName>
			<Icon>toolbar_white.png</Icon>
		</HighlightedControl>
	</HighlightedControls>

	<MauiHighlights>
		<MauiHighlight>
			<Icon>icon_sun.png</Icon>
			<Url>https://www.telerik.com/blogs/tag/sands-of-maui?utm_medium=product&amp;utm_source=appstoresamp&amp;utm_campaign=maui-awareness-maui-qsf-showcase</Url>
			<DisplayText>Sands of MAUI&#10;Newsletter</DisplayText>
		</MauiHighlight>
		<MauiHighlight>
			<Icon>icon_umbrella.png</Icon>
			<Url>https://www.telerik.com/blogs/mobile-net-maui?utm_medium=product&amp;utm_source=appstoresamp&amp;utm_campaign=maui-awareness-maui-qsf-showcase</Url>
			<DisplayText>Telerik Blogs: All&#10;About .NET MAUI</DisplayText>
		</MauiHighlight>
		<MauiHighlight>
			<Icon>icon_video.png</Icon>
			<Url>https://www.youtube.com/playlist?list=PLvmaC-XMqeBaqRbDn0cY9dVZEIt-Yu7HB</Url>
			<DisplayText>.NET Dev Show&#10;with Sam Basu</DisplayText>
		</MauiHighlight>
		<MauiHighlight>
			<Icon>icon_video.png</Icon>
			<Url>https://www.youtube.com/playlist?list=PLvmaC-XMqeBaQbJRhd_KYb1TViCdncggS</Url>
			<DisplayText>Snorkeling in&#10;MAUI 2022</DisplayText>
		</MauiHighlight>
	</MauiHighlights>

	<DemoApps>
		<DemoApp>
			<Icon>logo_cryptoapp.png</Icon>
			<DisplayText>Crypto Tracker</DisplayText>
			<Url>https://docs.telerik.com/devtools/maui/demos-and-sample-apps/crypto-app?utm_medium=product&amp;utm_source=appstores&amp;utm_campaign=maui-awareness-maui-qsf-showcase</Url>
		</DemoApp>
		<DemoApp>
			<Icon>logo_progress.png</Icon>
			<DisplayText>SDK Browser</DisplayText>
			<Url>https://docs.telerik.com/devtools/maui/demos-and-sample-apps/maui-demo-app?utm_medium=product&amp;utm_source=appstores&amp;utm_campaign=maui-awareness-maui-qsf-showcase</Url>
		</DemoApp>
		<DemoApp>
			<Icon>icon_csharp_cw.png</Icon>
		</DemoApp>
		<DemoApp>
			<Icon>icon_csharp_ccw.png</Icon>
		</DemoApp>
	</DemoApps>

</Configuration>
